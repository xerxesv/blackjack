// Generated by CoffeeScript 1.10.0
(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  window.HandHistoryEntryView = (function(superClass) {
    extend(HandHistoryEntryView, superClass);

    function HandHistoryEntryView() {
      return HandHistoryEntryView.__super__.constructor.apply(this, arguments);
    }

    HandHistoryEntryView.prototype.tagName = 'tr';

    HandHistoryEntryView.prototype.initialize = function() {
      return this.render();
    };

    HandHistoryEntryView.prototype.render = function() {
      var dealerHandView, playerHandView;
      dealerHandView = new HandView({
        collection: this.model.get('dealerHand')
      });
      playerHandView = new HandView({
        collection: this.model.get('playerHand')
      });
      return this.$el.append("<td>" + (playerHandView.$el.html()) + "</td><td>" + (dealerHandView.$el.html()) + "</td>");
    };

    return HandHistoryEntryView;

  })(Backbone.View);

}).call(this);

//# sourceMappingURL=HandHistoryEntryView.js.map
